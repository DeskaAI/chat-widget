{"version":3,"file":"index.umd.js","sources":["../src/components/WidgetToggle.tsx","../src/utils.ts","../src/theme.ts","../src/storage.ts","../src/logger.ts","../src/components/ChatWidgetContainer.tsx","../src/components/ErrorBoundary.tsx","../src/components/ChatWidget.tsx","../src/index.tsx","../src/components/ChatWindow.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react'\nimport { Button, Image } from 'theme-ui'\nimport { motion } from 'framer-motion'\n\nconst Path = (props: any) => (\n  <motion.path\n    fill='transparent'\n    strokeWidth='3'\n    stroke='hsl(0, 0%, 99%)'\n    strokeLinecap='round'\n    {...props}\n  />\n)\n\nconst DefaultToggleIcon = () => {\n  return (\n    <svg width='27' height='27' viewBox='0 0 27 27'>\n      <Path\n        variants={{\n          closed: { opacity: 0, d: 'M 7.5 14.5 L 19 14.5' },\n          open: { opacity: 1, d: 'M 7 7 L 20 20' }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n\n      <Path\n        variants={{\n          closed: { opacity: 0, d: 'M 7.5 8.5 L 19 8.5' },\n          open: { opacity: 1, d: 'M 7 20 L 20 7' }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n\n      <Path\n        d='M22 21.6453C22 20 23 19.5 23 19.5C23 19.5 25.5 18 25.5 14V9C25.5 4 23 1.5 18 1.5H9C4 1.5 1.5 4 1.5 9V14C1.5 19 4 21 9 21H13.5C14 21 14 21 15 21.5L20.25 24.8572L20.8517 25.2118C21.5184 25.6046 22 25.631 22 24.8572V24.0287V22.7858V21.6453Z'\n        variants={{\n          closed: { opacity: 1 },\n          open: { opacity: 0 }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n    </svg>\n  )\n}\n\nexport const ToggleIconFilled = () => {\n  return (\n    <svg width='24' height='25' viewBox='0 0 24 25' fill='none'>\n      <Path\n        variants={{\n          closed: { opacity: 0, d: 'M 7.5 14.5 L 19 14.5' },\n          open: { opacity: 1, d: 'M 5 5 L 20 20' }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n\n      <Path\n        variants={{\n          closed: { opacity: 0, d: 'M 7.5 8.5 L 19 8.5' },\n          open: { opacity: 1, d: 'M 5 20 L 20 5' }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n\n      <motion.path\n        d='M20.5 21.1453C20.5 19.5 21.5 19 21.5 19C21.5 19 24 18.5 24 13.5V8.5C24 3.5 21.5 1 16.5 1H7.5C2.5 1 0 3.5 0 8.5V13.5C0 18.5 2.5 20.5 7.5 20.5H12C12.5 20.5 12.5 20.5 13.5 21L18.75 24.3572L19.3517 24.7118C20.0184 25.1046 20.5 25.131 20.5 24.3572V23.5287V22.2858V21.1453Z'\n        fill='white'\n        fillOpacity='0.7'\n        variants={{\n          closed: { opacity: 1 },\n          open: { opacity: 0 }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n      <motion.path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M21.5 18C21.5 18 20.5 18.5 20.5 20.1453V21.2858V22.5287V23.3572C20.5 24.131 20.0184 24.1046 19.3517 23.7118L18.75 23.3572L13.5 20C12.8174 19.6587 12.6007 19.5504 12.3729 19.516C12.267 19.5 12.1587 19.5 12 19.5H7.5C2.5 19.5 0 17.5 0 12.5V7.5C0 2.5 2.5 0 7.5 0H16.5C21.5 0 24 2.5 24 7.5V12.5C24 17.5 21.5 18 21.5 18ZM21 17.557C21.8581 17.557 24 13.557 23 13.057C22.3869 12.7505 21.8801 13.7414 21.4646 14.554C21.2023 15.0668 20.9764 15.5086 20.783 15.5086C20.283 15.5086 20 16.0554 20 16.7568C20 17.4582 20.1419 17.557 21 17.557Z'\n        fill='white'\n        variants={{\n          closed: { opacity: 1 },\n          open: { opacity: 0 }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n    </svg>\n  )\n}\n\nconst DefaultCloseIcon = () => {\n  return (\n    <svg width='27' height='27' viewBox='0 0 27 27'>\n      <Path\n        variants={{\n          closed: { opacity: 0, d: 'M 7.5 14.5 L 19 14.5' },\n          open: { opacity: 1, d: 'M 7 7 L 20 20' }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n\n      <Path\n        variants={{\n          closed: { opacity: 0, d: 'M 7.5 8.5 L 19 8.5' },\n          open: { opacity: 1, d: 'M 7 20 L 20 7' }\n        }}\n        transition={{ duration: 0.2 }}\n      />\n    </svg>\n  )\n}\n\nconst ToggleIcon = ({\n  isOpen,\n  customIconUrl,\n  iconVariant\n}: {\n  isOpen?: boolean;\n  customIconUrl?: string;\n  iconVariant?: 'outlined' | 'filled';\n}) => {\n  if (!customIconUrl) {\n    return iconVariant === 'filled' ? (\n      <ToggleIconFilled />\n    ) : (\n      <DefaultToggleIcon />\n    )\n  }\n\n  if (isOpen) {\n    return <DefaultCloseIcon />\n  } else {\n    return <Image src={customIconUrl} style={{ maxHeight: 40, maxWidth: 40 }} />\n  }\n}\n\nexport const WidgetToggle = ({\n  isOpen,\n  isDisabled,\n  customIconUrl,\n  iconVariant,\n  style,\n  toggle\n}: {\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  customIconUrl?: string;\n  iconVariant?: 'outlined' | 'filled';\n  style: CSSProperties;\n  toggle: () => void;\n}) => {\n  return (\n    <Button\n      className='Deska-toggleButton'\n      variant='primary'\n      p={0}\n      style={style}\n      sx={{\n        variant: 'styles.WidgetToggle'\n      }}\n      disabled={isDisabled}\n      onClick={toggle}\n      aria-label={`${isOpen ? 'Close' : 'Open'} chat widget`}\n    >\n      <ToggleIcon\n        customIconUrl={customIconUrl}\n        iconVariant={iconVariant}\n        isOpen={isOpen}\n      />\n    </Button>\n  )\n}\n\nexport default WidgetToggle\n","export type WidgetConfig = {\n  token?: string;\n  inbox?: string;\n  // TODO: deprecate\n  accountId?: string;\n  baseUrl?: string;\n  title?: string;\n  subtitle?: string;\n  primaryColor?: string;\n  greeting?: string;\n  awayMessage?: string;\n  newMessagePlaceholder?: string;\n  emailInputPlaceholder?: string;\n  newMessagesNotificationText?: string;\n  companyName?: string;\n  agentAvailableText?: string;\n  agentUnavailableText?: string;\n  showAgentAvailability?: 1 | 0;\n  requireEmailUpfront?: 1 | 0;\n  disableAnalyticsTracking?: 1 | 0;\n  closeable?: 1 | 0;\n  debug?: 1 | 0;\n  customerId?: string;\n  subscriptionPlan?: string;\n  isBrandingHidden?: boolean;\n  isOutsideWorkingHours?: boolean;\n  metadata?: string; // stringified JSON\n  version?: string;\n  ts?: string;\n};\n\nexport function noop() {}\n","import tinycolor from 'tinycolor2';\n\ntype ThemeSettings = {primary?: string};\n\nconst styles: {[key: string]: any} = {\n  ChatWindowContainer: {\n    margin: 0,\n    height: '100%',\n    width: '100%',\n    minHeight: 320,\n  },\n  WidgetContainer: {\n    margin: 0,\n    zIndex: 2147483000,\n    position: 'fixed',\n    bottom: 100,\n    right: 20,\n    width: 376,\n    maxWidth: ['90%', '376px'],\n    minHeight: 250,\n    maxHeight: ['60%', '704px'],\n    boxShadow: 'rgba(0, 0, 0, 0.16) 0px 5px 40px',\n    height: 'calc(100% - 120px)',\n    borderRadius: 8,\n    overflow: 'hidden',\n    notifications: {\n      background: 'transparent',\n      margin: 0,\n      zIndex: 2147483000,\n      position: 'fixed',\n      bottom: 80,\n      right: 20,\n      width: 'auto',\n      maxWidth: ['90%', '300px'],\n      minHeight: 0,\n      maxHeight: ['60%', '400px'],\n      boxShadow: 'none',\n      height: 200,\n      overflow: 'hidden',\n    },\n  },\n  WidgetToggleContainer: {\n    position: 'fixed',\n    zIndex: 2147483003,\n    bottom: '20px',\n    right: '20px',\n  },\n  WidgetToggle: {\n    outline: 'none !important',\n    border: 'none !important',\n    userSelect: 'none !important',\n    cursor: 'pointer',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n\nexport const getThemeConfig = (settings: ThemeSettings) => {\n  const {primary = '#1890ff'} = settings;\n  const base = tinycolor(primary);\n  const overrides = {\n    primary: base.toString(),\n    light: base.lighten().toString(),\n    dark: base.darken().toString(),\n  };\n\n  return {\n    useBodyStyles: false,\n    space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n    fonts: {\n      body: '-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;',\n      heading:\n        '-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;',\n      monospace: '\"Roboto Mono\", monospace',\n    },\n    fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n    fontWeights: {\n      body: 400,\n      heading: 600,\n      bold: 600,\n    },\n    lineHeights: {\n      body: 1.5,\n      heading: 1.125,\n    },\n    colors: {\n      text: '#141414',\n      background: '#fff',\n      primary: overrides.primary,\n      secondary: '#722ed1',\n      muted: '#f0f0f0',\n      gray: 'rgba(0, 0, 0, 0.45)',\n      // TODO: come up with better names!\n      input: 'rgba(0, 0, 0, 0.65)',\n      offset: 'rgba(255, 255, 255, 0.8)',\n    },\n    text: {\n      default: {\n        color: 'text',\n        fontSize: 1,\n      },\n      caps: {\n        textTransform: 'uppercase',\n        letterSpacing: '0.2em',\n      },\n      heading: {\n        fontFamily: 'heading',\n        fontWeight: 'heading',\n        lineHeight: 'heading',\n      },\n    },\n    buttons: {\n      primary: {\n        cursor: 'pointer',\n        outline: 0,\n        boxShadow: 'rgba(0, 0, 0, 0.08) 0 2px 4px',\n        transition: '0.2s',\n        '&:hover': {\n          background: overrides.light,\n          borderColor: overrides.light,\n          boxShadow: 'rgba(0, 0, 0, 0.12) 0px 2px 8px',\n        },\n        '&:active': {\n          background: overrides.dark,\n          borderColor: overrides.dark,\n        },\n      },\n    },\n    styles: {\n      root: {\n        fontFamily: 'body',\n        lineHeight: 'body',\n        fontWeight: 'body',\n        fontSize: 1,\n      },\n      h1: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 5,\n      },\n      h2: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 4,\n      },\n      h3: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 3,\n      },\n      h4: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 2,\n      },\n      h5: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 1,\n      },\n      h6: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 0,\n      },\n      p: {\n        color: 'text',\n        fontFamily: 'body',\n        fontWeight: 'body',\n        lineHeight: 'body',\n      },\n      a: {\n        color: 'primary',\n      },\n      pre: {\n        fontFamily: 'monospace',\n        overflowX: 'auto',\n        code: {\n          color: 'inherit',\n        },\n      },\n      code: {\n        fontFamily: 'monospace',\n        fontSize: 'inherit',\n      },\n      table: {\n        width: '100%',\n        borderCollapse: 'separate',\n        borderSpacing: 0,\n      },\n      th: {\n        textAlign: 'left',\n        borderBottomStyle: 'solid',\n      },\n      td: {\n        textAlign: 'left',\n        borderBottomStyle: 'solid',\n      },\n      img: {\n        maxWidth: '100%',\n      },\n      textarea: {\n        transparent: {\n          border: 'none',\n          boxShadow: 'none',\n          resize: 'none',\n          outline: 0,\n          '&:hover': {\n            border: 'none',\n            boxShadow: 'none',\n            resize: 'none',\n            outline: 0,\n          },\n          '&:active': {\n            border: 'none',\n            boxShadow: 'none',\n            resize: 'none',\n            outline: 0,\n          },\n          '&:focus': {\n            border: 'none',\n            boxShadow: 'none',\n            resize: 'none',\n            outline: 0,\n          },\n        },\n      },\n      ...styles,\n    },\n  };\n};\n\nexport default getThemeConfig;\n","// TODO: do something different for dev vs prod\nconst PREFIX = '__DESKA__';\n\ntype StorageType = 'local' | 'session' | 'cookie' | 'memory' | 'none' | null;\n\ninterface Storage {\n  get: (key: string) => any;\n  set: (key: string, value: any) => void;\n  remove: (key: string) => any;\n}\n\ntype FallbackStorage = Storage & {\n  _db: Record<string, any>;\n  getItem: (key: string) => any;\n  setItem: (key: string, value: any) => void;\n  removeItem: (key: string) => any;\n};\n\nconst useFallbackStorage = (): FallbackStorage => {\n  return {\n    _db: {},\n    getItem(key: string) {\n      return this._db[key] || null;\n    },\n    setItem(key: string, value: any) {\n      this._db[key] = value;\n    },\n    removeItem(key: string) {\n      delete this._db[key];\n    },\n    // Aliases\n    get(key: string) {\n      return this._db[key] || null;\n    },\n    set(key: string, value: any) {\n      this._db[key] = value;\n    },\n    remove(key: string) {\n      delete this._db[key];\n    },\n  };\n};\n\nconst useLocalStorage = (w: any): Storage => {\n  try {\n    const storage = w && w.localStorage;\n\n    return {\n      ...storage,\n      get: (key: string) => {\n        const result = storage.getItem(`${PREFIX}${key}`);\n\n        if (!result) {\n          return null;\n        }\n\n        try {\n          return JSON.parse(result);\n        } catch (e) {\n          return result;\n        }\n      },\n      set: (key: string, value: any) => {\n        storage.setItem(`${PREFIX}${key}`, JSON.stringify(value));\n      },\n      remove: (key: string) => {\n        storage.removeItem(key);\n      },\n    };\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\nconst useSessionStorage = (w: any): Storage => {\n  try {\n    const storage = w && w.sessionStorage;\n\n    // NB: this is the same as `localStorage` above\n    return {\n      ...storage,\n      get: (key: string) => {\n        const result = storage.getItem(`${PREFIX}${key}`);\n\n        if (!result) {\n          return null;\n        }\n\n        try {\n          return JSON.parse(result);\n        } catch (e) {\n          return result;\n        }\n      },\n      set: (key: string, value: any) => {\n        storage.setItem(`${PREFIX}${key}`, JSON.stringify(value));\n      },\n      remove: (key: string) => {\n        storage.removeItem(key);\n      },\n    };\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\nconst useCookieStorage = (): Storage => {\n  try {\n    throw new Error('Cookie storage has not been implemented!');\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\n// FIXME: this is just a workaround until we can stop\n// relying on localStorage in our chat iframe\nconst getPreferredStorage = (w: any, type: StorageType = 'local'): Storage => {\n  try {\n    switch (type) {\n      case 'local':\n        return useLocalStorage(w);\n      case 'session':\n        return useSessionStorage(w);\n      case 'cookie':\n        return useCookieStorage();\n      case 'memory':\n      default:\n        return useFallbackStorage();\n    }\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\nexport default function store(\n  w: any,\n  options: { defaultType?: StorageType; openStateType?: StorageType } = {}\n) {\n  const { defaultType = 'local', openStateType = 'session' } = options;\n  // TODO: add support for using cookies as well\n  const defaultStorage = getPreferredStorage(w, defaultType);\n  const openStateStorage = getPreferredStorage(w, openStateType);\n\n  // TODO: improve these names\n  return {\n    getCustomerId: () => defaultStorage.get('__CUSTOMER_ID__'),\n    setCustomerId: (id: string) => defaultStorage.set('__CUSTOMER_ID__', id),\n    removeCustomerId: () => defaultStorage.remove('__CUSTOMER_ID__'),\n    // Open state\n    getOpenState: () => openStateStorage.get(':open'),\n    setOpenState: (state: string | boolean) =>\n      openStateStorage.set(':open', state),\n    clearOpenState: () => openStateStorage.remove(':open'),\n    // Popup seen state\n    getPopupSeen: () => openStateStorage.get(':pop_up_seen'),\n    setPopupSeen: (state: string | boolean) =>\n      openStateStorage.set(':pop_up_seen', state),\n    clearPopupSeen: () => openStateStorage.remove(':pop_up_seen'),\n  };\n}\n","class Logger {\n  debugModeEnabled: boolean;\n\n  constructor(debugModeEnabled?: boolean) {\n    this.debugModeEnabled = !!debugModeEnabled\n  }\n\n  debug(...args: any) {\n    if (!this.debugModeEnabled) {\n      return\n    }\n\n    console.debug('[Deska]', ...args)\n  }\n\n  log(...args: any) {\n    if (!this.debugModeEnabled) {\n      return\n    }\n\n    console.log('[Deska]', ...args)\n  }\n\n  info(...args: any) {\n    console.info('[Deska]', ...args)\n  }\n\n  warn(...args: any) {\n    console.warn('[Deska]', ...args)\n  }\n\n  error(...args: any) {\n    console.error('[Deska]', ...args)\n  }\n}\n\nexport default Logger\n","// /** @jsx jsx */\n\nimport React from 'react'\nimport { ThemeProvider } from 'theme-ui'\nimport qs from 'query-string'\nimport {\n  CustomerMetadata,\n  Message,\n  WidgetSettings,\n  fetchWidgetSettings,\n  updateWidgetSettingsMetadata,\n  isValidUuid,\n  getUserInfo,\n  setupCustomEventHandlers,\n  setupPostMessageHandlers\n} from '@papercups-io/browser'\n\nimport { WidgetConfig, noop } from '../utils'\nimport getThemeConfig from '../theme'\nimport store from '../storage'\nimport Logger from '../logger'\n\nconst DEFAULT_IFRAME_URL = 'https://chat-widget.deskaai.com'\n\nexport type SharedProps = {\n  token: string;\n  inbox?: string;\n  // TODO: deprecate, use `token` instead\n  accountId?: string;\n  title?: string;\n  subtitle?: string;\n  primaryColor?: string;\n  baseUrl?: string;\n  greeting?: string;\n  awayMessage?: string;\n  customer?: CustomerMetadata | null;\n  newMessagePlaceholder?: string;\n  emailInputPlaceholder?: string;\n  newMessagesNotificationText?: string;\n  agentAvailableText?: string;\n  agentUnavailableText?: string;\n  showAgentAvailability?: boolean;\n  iframeUrlOverride?: string;\n  requireEmailUpfront?: boolean;\n  hideOutsideWorkingHours?: boolean;\n  popUpInitialMessage?: boolean | number;\n  customIconUrl?: string;\n  disableAnalyticsTracking?: boolean;\n  debug?: boolean;\n  onChatLoaded?: ({\n    open,\n    close,\n    identify\n  }: {\n    open: () => void;\n    close: () => void;\n    identify: (data: any) => void;\n  }) => void;\n  onChatOpened?: () => void;\n  onChatClosed?: () => void;\n  onMessageSent?: (message: Message) => void;\n  onMessageReceived?: (message: Message) => void;\n  // TODO: how should we name these?\n  setDefaultTitle?: (settings: WidgetSettings) => string | Promise<string>;\n  setDefaultSubtitle?: (settings: WidgetSettings) => string | Promise<string>;\n  setDefaultGreeting?: (settings: WidgetSettings) => string | Promise<string>;\n};\n\ntype Props = SharedProps & {\n  defaultIsOpen?: boolean;\n  isOpenByDefault?: boolean;\n  persistOpenState?: boolean;\n  canToggle?: boolean;\n  children: (data: any) => any;\n};\n\ntype State = {\n  isOpen: boolean;\n  isLoaded: boolean;\n  query: string;\n  config: WidgetConfig;\n  shouldDisplayNotifications: boolean;\n  isTransitioning: boolean;\n};\n\nclass ChatWidgetContainer extends React.Component<Props, State> {\n  iframeRef: any;\n  storage: any;\n  subscriptions: Array<() => void> = [];\n  logger: Logger = new Logger();\n\n  EVENTS = [\n    'deska:open',\n    'deska:close',\n    'deska:toggle',\n    'deska:identify',\n    'deska:customer:set',\n    'storytime:customer:set'\n  ];\n\n  constructor(props: Props) {\n    super(props)\n\n    const token = props.token || props.accountId\n\n    if (!token) {\n      throw new Error('A `token` is required to run the Deska chat!')\n    } else if (!isValidUuid(token)) {\n      console.error(\n        `The \\`token\\` must be a valid UUID. (Received invalid \\`token\\`: ${token})`\n      )\n      console.error(\n        'If you\\'re missing a Deska `token`, you can get one by signing up for a free account at https://app.deskaai.com/register'\n      )\n      throw new Error(`Invalid \\`token\\`: ${token}`)\n    }\n\n    this.state = {\n      isOpen: false,\n      isLoaded: false,\n      query: '',\n      config: {} as WidgetConfig,\n      shouldDisplayNotifications: false,\n      isTransitioning: false\n    }\n  }\n\n  async componentDidMount() {\n    const ts = +new Date()\n    const {\n      token,\n      inbox,\n      accountId,\n      primaryColor,\n      baseUrl,\n      awayMessage,\n      newMessagePlaceholder,\n      emailInputPlaceholder,\n      newMessagesNotificationText,\n      agentAvailableText,\n      agentUnavailableText,\n      showAgentAvailability,\n      requireEmailUpfront,\n      disableAnalyticsTracking,\n      canToggle,\n      customer = {},\n      debug = false\n    } = this.props\n\n    this.logger = new Logger(!!debug)\n    this.subscriptions = [\n      setupPostMessageHandlers(window, this.postMessageHandlers),\n      setupCustomEventHandlers(window, this.EVENTS, this.customEventHandlers)\n    ]\n\n    this.storage = store(window)\n    // TODO: use `subscription_plan` from settings.account to determine\n    // whether to display the deska branding or not in the chat window\n    const settings = await this.fetchWidgetSettings()\n    const metadata = { ...getUserInfo(window), ...customer }\n    const config: WidgetConfig = {\n      baseUrl,\n      inbox,\n      token: token || accountId,\n      // TODO: deprecate\n      accountId: token || accountId,\n      title: await this.getDefaultTitle(settings),\n      subtitle: await this.getDefaultSubtitle(settings),\n      primaryColor: primaryColor || settings.color,\n      greeting: await this.getDefaultGreeting(settings),\n      awayMessage: awayMessage || settings.away_message,\n      newMessagePlaceholder:\n        newMessagePlaceholder || settings.new_message_placeholder,\n      emailInputPlaceholder:\n        emailInputPlaceholder || settings.email_input_placeholder,\n      newMessagesNotificationText:\n        newMessagesNotificationText || settings.new_messages_notification_text,\n      companyName: settings?.account?.company_name,\n      requireEmailUpfront:\n        requireEmailUpfront || settings.require_email_upfront ? 1 : 0,\n      showAgentAvailability:\n        showAgentAvailability || settings.show_agent_availability ? 1 : 0,\n      agentAvailableText: settings.agent_available_text || agentAvailableText,\n      agentUnavailableText:\n        settings.agent_unavailable_text || agentUnavailableText,\n      closeable: canToggle ? 1 : 0,\n      customerId: this.storage.getCustomerId(),\n      subscriptionPlan: settings?.account?.subscription_plan,\n      isOutsideWorkingHours: settings?.account?.is_outside_working_hours,\n      isBrandingHidden: settings?.is_branding_hidden,\n      metadata: JSON.stringify(metadata),\n      disableAnalyticsTracking: disableAnalyticsTracking ? 1 : 0,\n      debug: debug ? 1 : 0,\n      version: '1.3.1',\n      ts: ts.toString()\n    }\n\n    const query = qs.stringify(config, { skipEmptyString: true, skipNull: true })\n\n    this.setState({ config, query })\n\n    // Set some metadata on the widget to better understand usage\n    await this.updateWidgetSettingsMetadata()\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((unsubscribe) => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe()\n      }\n    })\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // Don't do anything if the widget hasn't loaded yet\n    if (!this.state.isLoaded) {\n      return\n    }\n\n    const {\n      token,\n      inbox,\n      accountId,\n      title,\n      subtitle,\n      primaryColor,\n      baseUrl,\n      greeting,\n      newMessagePlaceholder,\n      emailInputPlaceholder,\n      newMessagesNotificationText,\n      requireEmailUpfront,\n      showAgentAvailability,\n      agentAvailableText,\n      agentUnavailableText,\n      customer\n    } = this.props\n    const current = [\n      token,\n      inbox,\n      accountId,\n      title,\n      subtitle,\n      primaryColor,\n      baseUrl,\n      greeting,\n      newMessagePlaceholder,\n      emailInputPlaceholder,\n      newMessagesNotificationText,\n      requireEmailUpfront,\n      showAgentAvailability,\n      agentAvailableText,\n      agentUnavailableText\n    ]\n    const prev = [\n      prevProps.token,\n      prevProps.inbox,\n      prevProps.accountId,\n      prevProps.title,\n      prevProps.subtitle,\n      prevProps.primaryColor,\n      prevProps.baseUrl,\n      prevProps.greeting,\n      prevProps.newMessagePlaceholder,\n      prevProps.emailInputPlaceholder,\n      prevProps.newMessagesNotificationText,\n      prevProps.requireEmailUpfront,\n      prevProps.showAgentAvailability,\n      prevProps.agentAvailableText,\n      prevProps.agentUnavailableText\n    ]\n    const { customerId } = this.state.config\n    const shouldUpdateConfig = current.some((value, idx) => {\n      return value !== prev[idx]\n    })\n\n    // Send updates to iframe if props change. (This is mainly for use in\n    // the demo and \"Getting Started\" page, where users can play around with\n    // customizing the chat widget to suit their needs)\n    if (shouldUpdateConfig) {\n      this.handleConfigUpdated({\n        token,\n        inbox,\n        accountId,\n        title,\n        subtitle,\n        primaryColor,\n        baseUrl,\n        greeting,\n        newMessagePlaceholder,\n        emailInputPlaceholder,\n        newMessagesNotificationText,\n        agentAvailableText,\n        agentUnavailableText,\n        requireEmailUpfront: requireEmailUpfront ? 1 : 0,\n        showAgentAvailability: showAgentAvailability ? 1 : 0\n      })\n    }\n\n    if (this.shouldUpdateCustomer(customer, prevProps.customer)) {\n      this.updateCustomerMetadata(customerId, customer)\n    }\n  }\n\n  shouldUpdateCustomer = (current: any, previous: any) => {\n    if (!current) {\n      return false\n    } else if (current && !previous) {\n      return true\n    }\n\n    const { metadata: x = {}, ...a } = current || {}\n    const { metadata: y = {}, ...b } = previous || {}\n\n    const hasMatchingInfo = Object.keys(a).every((key) => a[key] === b[key])\n    const hasMatchingMetadata = Object.keys(x).every(\n      (key) => x[key] === y[key]\n    )\n\n    return !(hasMatchingInfo && hasMatchingMetadata)\n  };\n\n  getDefaultTitle = async (settings: WidgetSettings) => {\n    const { title, setDefaultTitle } = this.props\n\n    if (setDefaultTitle && typeof setDefaultTitle === 'function') {\n      return setDefaultTitle(settings)\n    } else {\n      return title || settings.title\n    }\n  };\n\n  getDefaultSubtitle = async (settings: WidgetSettings) => {\n    const { subtitle, setDefaultSubtitle } = this.props\n\n    if (setDefaultSubtitle && typeof setDefaultSubtitle === 'function') {\n      return setDefaultSubtitle(settings)\n    } else {\n      return subtitle || settings.subtitle\n    }\n  };\n\n  getDefaultGreeting = async (settings: WidgetSettings) => {\n    const { greeting, setDefaultGreeting } = this.props\n\n    if (setDefaultGreeting && typeof setDefaultGreeting === 'function') {\n      return setDefaultGreeting(settings)\n    } else {\n      return greeting || settings.greeting\n    }\n  };\n\n  setIframeRef = (el: HTMLIFrameElement) => {\n    this.iframeRef = el\n  };\n\n  getIframeUrl = () => {\n    return this.props.iframeUrlOverride || DEFAULT_IFRAME_URL\n  };\n\n  handleConfigUpdated = (updates: WidgetConfig) => {\n    this.setState({\n      config: {\n        ...this.state.config,\n        ...updates\n      }\n    })\n\n    this.send('config:update', updates)\n  };\n\n  handleSetCustomerId = (id?: any) => {\n    const cachedCustomerId = this.storage.getCustomerId()\n    const customerId = id || cachedCustomerId\n\n    this.logger.debug('Setting customer ID:', customerId)\n    this.setState({\n      config: { ...this.state.config, customerId }\n    })\n    this.send('customer:set:id', customerId)\n  };\n\n  handleCustomerIdUpdated = (id?: any) => {\n    const cachedCustomerId = this.storage.getCustomerId()\n    const customerId = id || cachedCustomerId\n    const config = { ...this.state.config, customerId }\n\n    // TODO: this is a slight hack to force a refresh of the chat window\n    this.setState({\n      config,\n      query: qs.stringify(config, { skipEmptyString: true, skipNull: true })\n    })\n\n    this.logger.debug('Updated customer ID:', customerId)\n  };\n\n  fetchWidgetSettings = async (): Promise<WidgetSettings> => {\n    const { token, inbox, accountId, baseUrl } = this.props\n    const params = { account_id: accountId || token, inbox_id: inbox }\n    const empty = {} as WidgetSettings\n\n    return fetchWidgetSettings(params, baseUrl)\n      .then((settings) => settings || empty)\n      .catch(() => empty)\n  };\n\n  updateWidgetSettingsMetadata = async () => {\n    const { token, inbox, accountId, baseUrl } = this.props\n    const params = {\n      account_id: accountId || token,\n      inbox_id: inbox,\n      metadata: getUserInfo(window)\n    }\n\n    return updateWidgetSettingsMetadata(params, baseUrl).catch((err) => {\n      // No need to block on this\n      this.logger.error('Failed to update widget metadata:', err)\n    })\n  };\n\n  hasValidPayloadIdentity = (payload: any) => {\n    const ts = payload && payload.ts\n    const { config = {} as WidgetConfig } = this.state\n\n    if (!ts) {\n      // If the payload doesn't contain an identifier, let it pass through\n      return true\n    }\n\n    if (config.ts === ts) {\n      // Pass through, since the payload identifier matches the component ts\n      return true\n    }\n\n    return false\n  };\n\n  customEventHandlers = (event: any) => {\n    if (!event || !event.type) {\n      return null\n    }\n\n    const { type, detail } = event\n\n    switch (type) {\n      case 'deska:open':\n        return this.handleOpenWidget()\n      case 'deska:close':\n        return this.handleCloseWidget()\n      case 'deska:toggle':\n        return this.handleToggleOpen()\n      case 'deska:customer:set':\n        return this.handleSetCustomerId(detail)\n      case 'storytime:customer:set':\n        return this.handleCustomerIdUpdated(detail) // TODO: test this!\n      default:\n        return null\n    }\n  };\n\n  postMessageHandlers = (msg: any) => {\n    this.logger.debug('Handling in parent:', msg.data)\n    const iframeUrl = this.getIframeUrl()\n    const { origin } = new URL(iframeUrl)\n\n    if (msg.origin !== origin) {\n      return null\n    }\n\n    const { event, payload = {} } = msg.data\n\n    if (!this.hasValidPayloadIdentity(payload)) {\n      this.logger.warn(\n        'Payload identifer from iframe does not match parent — halting message handlers.'\n      )\n\n      return null\n    }\n\n    switch (event) {\n      case 'chat:loaded':\n        return this.handleChatLoaded()\n      case 'customer:created':\n      case 'customer:updated':\n        return this.handleCacheCustomerId(payload)\n      case 'conversation:join':\n        return this.sendCustomerUpdate(payload)\n      case 'message:received':\n        return this.handleMessageReceived(payload)\n      case 'message:sent':\n        return this.handleMessageSent(payload)\n      case 'messages:unseen':\n        return this.handleUnseenMessages(payload)\n      case 'messages:seen':\n        return this.handleMessagesSeen()\n      case 'deska:open':\n      case 'deska:close':\n        return this.handleToggleOpen()\n      default:\n        return null\n    }\n  };\n\n  send = (event: string, payload?: any) => {\n    this.logger.debug('Sending from parent:', { event, payload })\n    const el = this.iframeRef as any\n\n    if (!el) {\n      throw new Error(\n        `Attempted to send event ${event} with payload ${JSON.stringify(\n          payload\n        )} before iframeRef was ready`\n      )\n    }\n\n    el.contentWindow.postMessage({ event, payload }, this.getIframeUrl())\n  };\n\n  handleMessageReceived = (message: Message) => {\n    const { onMessageReceived = noop } = this.props\n    const { user_id: userId, customer_id: customerId } = message\n    const isFromAgent = !!userId && !customerId\n\n    // Only invoke callback if message is from agent, because we currently track\n    // `message:received` events to know if a message went through successfully\n    if (isFromAgent) {\n      onMessageReceived && onMessageReceived(message)\n    }\n  };\n\n  handleMessageSent = (message: Message) => {\n    const { onMessageSent = noop } = this.props\n\n    onMessageSent && onMessageSent(message)\n  };\n\n  handleUnseenMessages = (payload: any) => {\n    this.logger.debug('Handling unseen messages:', payload)\n\n    this.setState({ shouldDisplayNotifications: true })\n    this.send('notifications:display', { shouldDisplayNotifications: true })\n  };\n\n  handleMessagesSeen = () => {\n    this.logger.debug('Handling messages seen')\n\n    this.setState({ shouldDisplayNotifications: false })\n    this.storage.setPopupSeen(true)\n    this.send('notifications:display', { shouldDisplayNotifications: false })\n  };\n\n  shouldOpenByDefault = (): boolean => {\n    const { defaultIsOpen, isOpenByDefault, persistOpenState, canToggle } =\n      this.props\n\n    if (!canToggle) {\n      return true\n    }\n\n    const isOpenFromCache = this.storage.getOpenState()\n\n    if (persistOpenState) {\n      return isOpenFromCache\n    }\n\n    return !!(isOpenByDefault || defaultIsOpen)\n  };\n\n  handleChatLoaded = () => {\n    this.setState({ isLoaded: true })\n\n    const { config = {} as WidgetConfig } = this.state\n    const { subscriptionPlan = null } = config\n    const { popUpInitialMessage, onChatLoaded = noop } = this.props\n\n    if (onChatLoaded && typeof onChatLoaded === 'function') {\n      onChatLoaded({\n        open: this.handleOpenWidget,\n        close: this.handleCloseWidget,\n        identify: this.identify\n      })\n    }\n\n    if (this.shouldOpenByDefault()) {\n      this.setState({ isOpen: true }, () => this.emitToggleEvent(true))\n    }\n\n    if (popUpInitialMessage && !this.storage.getPopupSeen()) {\n      const t =\n        typeof popUpInitialMessage === 'number' ? popUpInitialMessage : 0\n\n      setTimeout(() => {\n        this.setState({ shouldDisplayNotifications: true })\n        this.send('notifications:display', {\n          shouldDisplayNotifications: true,\n          // TODO: this may not be necessary\n          popUpInitialMessage: true\n        })\n      }, t)\n    }\n\n    this.send('deska:plan', { plan: subscriptionPlan })\n  };\n\n  formatCustomerMetadata = (customer: CustomerMetadata | null | undefined) => {\n    if (!customer) {\n      return {}\n    }\n\n    return Object.keys(customer).reduce((acc, key) => {\n      if (key === 'metadata') {\n        return { ...acc, [key]: customer[key] }\n      } else {\n        // Make sure all other passed-in values are strings\n        return { ...acc, [key]: String(customer[key]) }\n      }\n    }, {})\n  };\n\n  identify = (data: CustomerMetadata) => {\n    const { customerId } = this.state.config\n\n    return this.updateCustomerMetadata(customerId, data)\n  };\n\n  updateCustomerMetadata = (\n    customerId: string | undefined,\n    data: CustomerMetadata | null | undefined\n  ) => {\n    const customerBrowserInfo = getUserInfo(window)\n    const metadata = {\n      ...customerBrowserInfo,\n      ...this.formatCustomerMetadata(data)\n    }\n\n    return this.send('customer:update', { customerId, metadata })\n  };\n\n  sendCustomerUpdate = (payload: any) => {\n    const { customerId } = payload\n    const { customer } = this.props\n\n    this.updateCustomerMetadata(customerId, customer)\n  };\n\n  handleCacheCustomerId = (payload: any) => {\n    const { customerId } = payload\n\n    // Let other modules know that the customer has been set\n    this.logger.debug('Caching customer ID:', customerId)\n    window.dispatchEvent(\n      new CustomEvent('deska:customer:set', {\n        detail: customerId\n      })\n    )\n\n    this.storage.setCustomerId(customerId)\n    this.setState({\n      config: { ...this.state.config, customerId }\n    })\n  };\n\n  emitToggleEvent = (isOpen: boolean) => {\n    this.send('deska:toggle', { isOpen })\n\n    const {\n      persistOpenState = false,\n      onChatOpened = noop,\n      onChatClosed = noop\n    } = this.props\n\n    if (persistOpenState) {\n      this.storage.setOpenState(isOpen)\n    }\n\n    if (isOpen) {\n      onChatOpened && onChatOpened()\n    } else {\n      onChatClosed && onChatClosed()\n    }\n  };\n\n  handleOpenWidget = () => {\n    if (!this.props.canToggle || this.state.isOpen) {\n      return\n    }\n\n    if (this.state.shouldDisplayNotifications) {\n      this.setState({ isTransitioning: true }, () => {\n        setTimeout(() => {\n          this.setState({ isOpen: true, isTransitioning: false }, () =>\n            this.emitToggleEvent(true)\n          )\n        }, 200)\n      })\n    } else {\n      this.setState({ isOpen: true }, () => this.emitToggleEvent(true))\n    }\n  };\n\n  handleCloseWidget = () => {\n    if (!this.props.canToggle || !this.state.isOpen) {\n      return\n    }\n\n    this.setState({ isOpen: false }, () => this.emitToggleEvent(false))\n  };\n\n  handleToggleOpen = () => {\n    const { isOpen: wasOpen, isLoaded, shouldDisplayNotifications } = this.state\n    const isOpen = !wasOpen\n\n    // Prevent opening the widget until everything has loaded\n    if (!isLoaded || !this.props.canToggle) {\n      return\n    }\n\n    if (!wasOpen && shouldDisplayNotifications) {\n      this.setState({ isTransitioning: true }, () => {\n        setTimeout(() => {\n          this.setState({ isOpen, isTransitioning: false }, () =>\n            this.emitToggleEvent(isOpen)\n          )\n        }, 200)\n      })\n    } else {\n      this.setState({ isOpen }, () => this.emitToggleEvent(isOpen))\n    }\n  };\n\n  render() {\n    const {\n      isOpen,\n      isLoaded,\n      query,\n      config,\n      shouldDisplayNotifications,\n      isTransitioning\n    } = this.state\n    const {\n      customIconUrl,\n      hideOutsideWorkingHours = false,\n      children\n    } = this.props\n    const { primaryColor } = config\n\n    if (!query) {\n      return null\n    }\n\n    if (hideOutsideWorkingHours && config.isOutsideWorkingHours) {\n      return null\n    }\n\n    const iframeUrl = this.getIframeUrl()\n    const isActive = (isOpen || shouldDisplayNotifications) && !isTransitioning\n    const theme = getThemeConfig({ primary: primaryColor })\n    const sandbox = [\n      // Allow scripts to load in iframe\n      'allow-scripts',\n      // Allow opening links from iframe\n      'allow-popups',\n      // Needed to access localStorage\n      'allow-same-origin',\n      // Allow form for message input\n      'allow-forms'\n    ].join(' ')\n\n    return (\n      <ThemeProvider\n        // @ts-ignore\n        theme={theme}>\n        {children({\n          sandbox,\n          isLoaded,\n          isActive,\n          isOpen,\n          isTransitioning,\n          customIconUrl,\n          iframeUrl,\n          query,\n          shouldDisplayNotifications,\n          setIframeRef: this.setIframeRef,\n          onToggleOpen: this.handleToggleOpen\n        })}\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default ChatWidgetContainer\n","import React from 'react';\n\ntype State = { error: any };\ntype Props = {};\n\nclass ErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  static getDerivedStateFromError(error: any) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  componentDidCatch(error: any, info: any) {\n    // TODO: log to Sentry?\n    console.error('Error rendering Deska chat:', error, info);\n  }\n\n  render() {\n    if (this.state.error) {\n      // TODO: should we render something different here?\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// /** @jsx jsx */\n\nimport React, { CSSProperties } from 'react'\nimport { motion } from 'framer-motion'\n\nimport WidgetToggle from './WidgetToggle'\nimport ChatWidgetContainer, { SharedProps } from './ChatWidgetContainer'\nimport ErrorBoundary from './ErrorBoundary'\n\ntype ToggleButtonOptions = {\n  isOpen: boolean;\n  isDisabled: boolean;\n  onToggleOpen: () => void;\n};\n\ntype StyleOverrides = {\n  chatContainer?: CSSProperties;\n  toggleContainer?: CSSProperties;\n  toggleButton?: CSSProperties;\n};\n\ntype PositionConfig = {\n  side: 'left' | 'right';\n  offset: number;\n};\n\nconst DEFAULT_X_OFFSET = 20\n\nconst normalizePositionConfig = (\n  position?: 'left' | 'right' | PositionConfig\n): PositionConfig => {\n  if (!position) {\n    return { side: 'right', offset: DEFAULT_X_OFFSET }\n  }\n\n  switch (position) {\n    case 'left':\n      return { side: 'left', offset: DEFAULT_X_OFFSET }\n    case 'right':\n      return { side: 'right', offset: DEFAULT_X_OFFSET }\n    default:\n      return position\n  }\n}\n\nconst getDefaultStyles = (\n  styles: StyleOverrides = {},\n  position: PositionConfig\n): StyleOverrides => {\n  const {\n    chatContainer: chatContainerStyle = {},\n    toggleContainer: toggleContainerStyle = {},\n    toggleButton: toggleButtonStyle = {}\n  } = styles\n  const { side = 'right', offset = DEFAULT_X_OFFSET } = position\n\n  switch (side) {\n    case 'left':\n      return {\n        chatContainer: { left: offset, right: 'auto', ...chatContainerStyle },\n        toggleContainer: {\n          left: offset,\n          right: 'auto',\n          ...toggleContainerStyle\n        },\n        toggleButton: toggleButtonStyle\n      }\n    case 'right':\n    default:\n      return {\n        chatContainer: { right: offset, left: 'auto', ...chatContainerStyle },\n        toggleContainer: {\n          right: offset,\n          left: 'auto',\n          ...toggleContainerStyle\n        },\n        toggleButton: toggleButtonStyle\n      }\n  }\n}\n\ntype Props = SharedProps & {\n  defaultIsOpen?: boolean;\n  isOpenByDefault?: boolean;\n  persistOpenState?: boolean;\n  hideToggleButton?: boolean;\n  iconVariant?: 'outlined' | 'filled';\n  position?: 'left' | 'right' | PositionConfig;\n  renderToggleButton?: (options: ToggleButtonOptions) => React.ReactElement;\n  styles?: StyleOverrides;\n};\n\nconst ChatWidget = (props: Props) => {\n  return (\n    // @ts-ignore\n    <ErrorBoundary>\n      <ChatWidgetContainer {...props} canToggle>\n        {(config) => {\n          const {\n            sandbox,\n            isLoaded,\n            isActive,\n            isOpen,\n            isTransitioning,\n            customIconUrl,\n            iframeUrl,\n            query,\n            shouldDisplayNotifications,\n            setIframeRef,\n            onToggleOpen\n          } = config\n\n          const {\n            hideToggleButton,\n            iconVariant,\n            renderToggleButton,\n            position = 'right',\n            styles = {}\n          } = props\n          const positionConfig = normalizePositionConfig(position)\n          const {\n            chatContainer: chatContainerStyle = {},\n            toggleContainer: toggleContainerStyle = {},\n            toggleButton: toggleButtonStyle = {}\n          } = getDefaultStyles(styles, positionConfig)\n\n          return (\n            <React.Fragment>\n              <motion.iframe\n                ref={setIframeRef}\n                title='Deska Chat Widget Container'\n                className='Deska-chatWindowContainer'\n                sandbox={sandbox}\n                animate={isActive ? 'open' : 'closed'}\n                initial='closed'\n                variants={{\n                  closed: { opacity: 0, y: 4 },\n                  open: { opacity: 1, y: 0 }\n                }}\n                transition={{ duration: 0.2, ease: 'easeIn' }}\n                src={`${iframeUrl}?${query}`}\n                style={\n                  isActive\n                    ? chatContainerStyle\n                    : ({\n                      pointerEvents: 'none',\n                      height: 0,\n                      minHeight: 0\n                    } as any)\n                }\n                sx={{\n                  border: 'none',\n                  bg: 'background',\n                  variant:\n                    !isOpen && shouldDisplayNotifications\n                      ? 'styles.WidgetContainer.notifications'\n                      : 'styles.WidgetContainer'\n                }}\n              >\n                Loading...\n              </motion.iframe>\n\n              {isLoaded && !hideToggleButton && (\n                <motion.div\n                  className='Deska-toggleButtonContainer'\n                  initial={false}\n                  style={toggleContainerStyle}\n                  animate={isOpen ? 'open' : 'closed'}\n                  sx={{\n                    variant: 'styles.WidgetToggleContainer'\n                  }}\n                >\n                  {renderToggleButton &&\n                    typeof renderToggleButton === 'function' ? (\n                    renderToggleButton({\n                      isOpen,\n                      onToggleOpen,\n                      isDisabled: isTransitioning\n                    })\n                  ) : (\n                    <WidgetToggle\n                      style={toggleButtonStyle}\n                      isDisabled={isTransitioning}\n                      isOpen={isOpen}\n                      customIconUrl={customIconUrl}\n                      iconVariant={iconVariant}\n                      toggle={onToggleOpen}\n                    />\n                  )}\n                </motion.div>\n              )}\n            </React.Fragment>\n          )\n        }}\n      </ChatWidgetContainer>\n    </ErrorBoundary>\n  )\n}\n\nexport default ChatWidget\n","import ChatWidget from './components/ChatWidget'\nimport ChatWindow from './components/ChatWindow'\n\nexport const open = () => window.dispatchEvent(new Event('deska:open'))\nexport const close = () => window.dispatchEvent(new Event('deska:close'))\nexport const toggle = () => window.dispatchEvent(new Event('deska:toggle'))\n\nexport const identify = () => {\n  // TODO: add ability to create/update customer information\n  console.warn('`Deska.identify` has not been implemented yet!')\n}\n\nexport const Papercups = {\n  open,\n  close,\n  toggle\n}\n\nexport { ChatWidget, ChatWindow }\n\nexport default ChatWidget\n","// /** @jsx jsx */\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport ChatWidgetContainer, { SharedProps } from \"./ChatWidgetContainer\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\ntype Props = SharedProps & {};\n\nconst ChatWindow = (props: Props) => {\n  // TODO: add a prop to `ChatWidgetContainer` to indicate when component is not\n  // the widget (e.g. it is never toggled open/closed, no need to show notifications)\n  return (\n    // @ts-ignore\n    <ErrorBoundary>\n      <ChatWidgetContainer {...props} canToggle={false}>\n        {(config) => {\n          const { sandbox, isLoaded, iframeUrl, query, setIframeRef } = config;\n\n          return (\n            <motion.iframe\n              ref={setIframeRef}\n              className=\"Deska-chatWindowContainer\"\n              sandbox={sandbox}\n              animate={isLoaded ? \"open\" : \"closed\"}\n              initial=\"closed\"\n              variants={{\n                closed: { opacity: 0 },\n                open: { opacity: 1 },\n              }}\n              transition={{ duration: 0.2, ease: \"easeIn\" }}\n              src={`${iframeUrl}?${query}`}\n              sx={{\n                opacity: isLoaded ? 1 : 0,\n                border: \"none\",\n                bg: \"background\",\n                variant: \"styles.ChatWindowContainer\",\n              }}\n            >\n              Loading...\n            </motion.iframe>\n          );\n        }}\n      </ChatWidgetContainer>\n    </ErrorBoundary>\n  );\n};\n\nexport default ChatWindow;\n"],"names":["Path","props","React","motion","path","fill","strokeWidth","stroke","strokeLinecap","DefaultToggleIcon","width","height","viewBox","variants","closed","opacity","d","open","transition","duration","ToggleIconFilled","fillOpacity","fillRule","clipRule","DefaultCloseIcon","ToggleIcon","_ref","customIconUrl","iconVariant","isOpen","Image","src","style","maxHeight","maxWidth","WidgetToggle","_ref2","Button","className","variant","p","sx","disabled","isDisabled","onClick","toggle","noop","styles","ChatWindowContainer","margin","minHeight","WidgetContainer","zIndex","position","bottom","right","boxShadow","borderRadius","overflow","notifications","background","WidgetToggleContainer","outline","border","userSelect","cursor","display","justifyContent","alignItems","PREFIX","getPreferredStorage","w","type","storage","localStorage","_extends","get","key","result","getItem","JSON","parse","e","set","value","setItem","stringify","remove","removeItem","_db","this","useLocalStorage","sessionStorage","useSessionStorage","Error","useCookieStorage","Logger","debugModeEnabled","_proto","prototype","debug","_len","arguments","length","args","Array","_key","_console","console","apply","concat","log","_len2","_key2","_console2","info","_len3","_key3","_console3","warn","_len4","_key4","_console4","error","_len5","_key5","_console5","ChatWidgetContainer","_React$Component","_this","call","current","previous","_ref$metadata","metadata","x","a","_objectWithoutPropertiesLoose","_excluded","_ref2$metadata","y","b","_excluded2","hasMatchingInfo","Object","keys","every","hasMatchingMetadata","settings","_this$props","title","setDefaultTitle","Promise","resolve","reject","_this$props2","subtitle","setDefaultSubtitle","_this$props3","greeting","setDefaultGreeting","el","iframeRef","iframeUrlOverride","updates","setState","config","state","send","id","cachedCustomerId","getCustomerId","customerId","logger","query","qs","skipEmptyString","skipNull","_this$props4","empty","fetchWidgetSettings","account_id","accountId","token","inbox_id","inbox","baseUrl","then","_this$props5","params","getUserInfo","window","updateWidgetSettingsMetadata","err","payload","ts","_this$state$config","event","detail","handleOpenWidget","handleCloseWidget","handleToggleOpen","handleSetCustomerId","handleCustomerIdUpdated","msg","data","iframeUrl","getIframeUrl","_URL","URL","origin","_msg$data","_msg$data$payload","hasValidPayloadIdentity","handleChatLoaded","handleCacheCustomerId","sendCustomerUpdate","handleMessageReceived","handleMessageSent","handleUnseenMessages","handleMessagesSeen","contentWindow","postMessage","message","_this$props$onMessage","onMessageReceived","user_id","customer_id","_this$props$onMessage2","onMessageSent","shouldDisplayNotifications","setPopupSeen","_this$props6","defaultIsOpen","isOpenByDefault","persistOpenState","canToggle","isOpenFromCache","getOpenState","isLoaded","_this$state$config2","_config$subscriptionP","subscriptionPlan","_this$props7","popUpInitialMessage","_this$props7$onChatLo","onChatLoaded","close","identify","shouldOpenByDefault","emitToggleEvent","getPopupSeen","setTimeout","plan","customer","reduce","acc","_extends2","_extends3","String","updateCustomerMetadata","formatCustomerMetadata","dispatchEvent","CustomEvent","setCustomerId","_this$props8","_this$props8$persistO","_this$props8$onChatOp","onChatOpened","_this$props8$onChatCl","onChatClosed","setOpenState","isTransitioning","_this$state","wasOpen","isValidUuid","_inheritsLoose","componentDidMount","Date","_this2$props","_this2","primaryColor","awayMessage","newMessagePlaceholder","emailInputPlaceholder","newMessagesNotificationText","agentAvailableText","agentUnavailableText","showAgentAvailability","requireEmailUpfront","disableAnalyticsTracking","_this2$props$customer","_this2$props$debug","subscriptions","setupPostMessageHandlers","postMessageHandlers","setupCustomEventHandlers","EVENTS","customEventHandlers","options","_options$defaultType","defaultType","_options$openStateTyp","openStateType","defaultStorage","openStateStorage","removeCustomerId","clearOpenState","clearPopupSeen","store","getDefaultTitle","_this2$getDefaultTitl","getDefaultSubtitle","_this2$getDefaultSubt","_temp","color","getDefaultGreeting","_this2$getDefaultGree","_settings$account","_settings$account2","_settings$account3","away_message","new_message_placeholder","email_input_placeholder","new_messages_notification_text","companyName","account","company_name","require_email_upfront","show_agent_availability","agent_available_text","agent_unavailable_text","closeable","subscription_plan","isOutsideWorkingHours","is_outside_working_hours","isBrandingHidden","is_branding_hidden","version","toString","componentWillUnmount","forEach","unsubscribe","componentDidUpdate","prevProps","_this$props9","prev","some","idx","handleConfigUpdated","shouldUpdateCustomer","render","_this$state2","_this$props10","_this$props10$hideOut","hideOutsideWorkingHours","children","_settings$primary","base","overrides","isActive","theme","useBodyStyles","space","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","colors","text","primary","tinycolor","light","lighten","dark","darken","secondary","muted","gray","input","offset","default","fontSize","caps","textTransform","letterSpacing","fontFamily","fontWeight","lineHeight","buttons","&:hover","borderColor","&:active","root","h1","h2","h3","h4","h5","h6","pre","overflowX","code","table","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","img","textarea","transparent","resize","&:focus","sandbox","join","ThemeProvider","setIframeRef","onToggleOpen","Component","ErrorBoundary","getDerivedStateFromError","componentDidCatch","ChatWidget","hideToggleButton","renderToggleButton","_props$position","_props$styles","_getDefaultStyles","_styles$chatContainer","chatContainer","chatContainerStyle","_styles$toggleContain","toggleContainer","toggleContainerStyle","_styles$toggleButton","toggleButton","toggleButtonStyle","_position$side","side","_position$offset","left","getDefaultStyles","normalizePositionConfig","_getDefaultStyles$cha","_getDefaultStyles$tog","_getDefaultStyles$tog2","Fragment","iframe","ref","animate","initial","ease","pointerEvents","bg","div","Event","Papercups"],"mappings":"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"}